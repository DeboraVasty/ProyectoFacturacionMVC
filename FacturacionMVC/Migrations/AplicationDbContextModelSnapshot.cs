// <auto-generated />
using System;
using FacturacionMVC.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FacturacionMVC.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    partial class AplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FacturacionMVC.Models.Cliente", b =>
                {
                    b.Property<int>("codigoCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefonos")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codigoCliente");

                    b.ToTable("TablaCliente");
                });

            modelBuilder.Entity("FacturacionMVC.Models.Factura", b =>
                {
                    b.Property<int>("NumeroFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Anulada")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalFactura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("codigoCliente")
                        .HasColumnType("int");

                    b.HasKey("NumeroFactura");

                    b.HasIndex("codigoCliente");

                    b.ToTable("TablaFactura");
                });

            modelBuilder.Entity("FacturacionMVC.Models.FacturaProducto", b =>
                {
                    b.Property<int?>("NumeroFactura")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoProducto")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("precioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("NumeroFactura", "CodigoProducto");

                    b.HasIndex("CodigoProducto");

                    b.ToTable("TablaFacturaProducto");
                });

            modelBuilder.Entity("FacturacionMVC.Models.Producto", b =>
                {
                    b.Property<int>("CodigoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Existencia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CodigoProducto");

                    b.ToTable("TablaProducto");
                });

            modelBuilder.Entity("FacturacionMVC.Models.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idUsuario");

                    b.ToTable("TablaUsuarios");
                });

            modelBuilder.Entity("FacturacionMVC.Models.Factura", b =>
                {
                    b.HasOne("FacturacionMVC.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("codigoCliente");

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("FacturacionMVC.Models.FacturaProducto", b =>
                {
                    b.HasOne("FacturacionMVC.Models.Producto", "CodProducto")
                        .WithMany()
                        .HasForeignKey("CodigoProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FacturacionMVC.Models.Factura", "NumeroFact")
                        .WithMany()
                        .HasForeignKey("NumeroFactura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodProducto");

                    b.Navigation("NumeroFact");
                });
#pragma warning restore 612, 618
        }
    }
}
